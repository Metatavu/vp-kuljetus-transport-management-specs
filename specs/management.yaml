openapi: 3.0.3
info:
  title: Vehicle Management Services (management)
  description: Vehicle Management Services (management)
  version: 1.0.0
paths:
  /vehicle-management/v1/trucks:
    get:
      operationId: listTrucks
      summary: List Trucks.
      description: Lists Trucks.
      tags:
        - Trucks
      parameters:
        - name: plateNumber
          in: query
          description: Filter results by plate number
          schema:
            type: string
        - name: first
          in: query
          description: First result.
          schema:
            type: integer
        - name: max
          in: query
          description: Max results.
          schema:
            type: integer
      responses:
        "200":
          description: List of trucks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Truck"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createTruck
      summary: Create truck
      description: Create new truck
      tags:
        - Trucks
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Truck"
        description: Payload
        required: true
      responses:
        "200":
          description: Created truck
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Truck"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /vehicle-management/v1/trucks/{truckId}:
    get:
      operationId: findTruck
      summary: Find a truck.
      description: Finds a truck by id.
      tags:
        - Trucks
      parameters:
        - name: truckId
          required: true
          in: path
          description: trucks id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Found truck
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Truck"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateTruck
      summary: Updates trucks
      description: Updates single truck
      tags:
        - Trucks
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Truck"
        description: Payload
        required: true
      parameters:
        - name: truckId
          required: true
          in: path
          description: truck id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated truck
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Truck"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteTruck
      summary: Deletes truck
      description: Deletes truck
      tags:
        - Trucks
      parameters:
        - name: truckId
          required: true
          in: path
          description: truck id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating successful removal
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /vehicle-management/v1/towables:
    get:
      operationId: listTowables
      summary: List Towables.
      description: Lists Towables.
      tags:
        - Towables
      parameters:
        - name: plateNumber
          in: query
          description: Filter results by plate number
          schema:
            type: string
        - name: first
          in: query
          description: First result.
          schema:
            type: integer
        - name: max
          in: query
          description: Max results.
          schema:
            type: integer
      responses:
        "200":
          description: List of towables
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Towable"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createTowable
      summary: Create towable
      description: Create new towable
      tags:
        - Towables
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Towable"
        description: Payload
        required: true
      responses:
        "200":
          description: Created towable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Towable"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /vehicle-management/v1/towables/{towableId}:
    get:
      operationId: findTowable
      summary: Find a towable.
      description: Finds a towable by id.
      tags:
        - Towables
      parameters:
        - name: towableId
          required: true
          in: path
          description: towables id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Found towable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Towable"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateTowable
      summary: Updates towables
      description: Updates single towable
      tags:
        - Towables
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Towable"
        description: Payload
        required: true
      parameters:
        - name: towableId
          required: true
          in: path
          description: towable id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated towable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Towable"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteTowable
      summary: Deletes towable
      description: Deletes towable
      tags:
        - Towables
      parameters:
        - name: towableId
          required: true
          in: path
          description: towable id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating successful removal
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /vehicle-management/v1/vehicles:
    get:
      operationId: listVehicles
      summary: List Vehicles.
      description: Lists Vehicles.
      tags:
        - Vehicles
      parameters:
        - name: truckId
          in: query
          description: Filter results by truck id
          schema:
            type: string
            format: uuid
        - name: first
          in: query
          description: First result.
          schema:
            type: integer
        - name: max
          in: query
          description: Max results.
          schema:
            type: integer
      responses:
        "200":
          description: List of vehicles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Vehicle"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createVehicle
      summary: Create vehicle
      description: Create new vehicle
      tags:
        - Vehicles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Vehicle"
        description: Payload
        required: true
      responses:
        "200":
          description: Created vehicle
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vehicle"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /vehicle-management/v1/vehicles/{vehicleId}:
    get:
      operationId: findVehicle
      summary: Find a vehicle.
      description: Finds a vehicle by id.
      tags:
        - Vehicles
      parameters:
        - name: vehicleId
          required: true
          in: path
          description: vehicles id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Found vehicle
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vehicle"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateVehicle
      summary: Updates vehicles
      description: Updates single vehicle
      tags:
        - Vehicles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Vehicle"
        description: Payload
        required: true
      parameters:
        - name: vehicleId
          required: true
          in: path
          description: vehicle id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated vehicle
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vehicle"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteVehicle
      summary: Deletes vehicle
      description: Deletes vehicle
      tags:
        - Vehicles
      parameters:
        - name: vehicleId
          required: true
          in: path
          description: vehicle id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating successful removal
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /work-planning/v1/routes:
    get:
      operationId: listRoutes
      summary: List Routes.
      description: Lists Routes.
      tags:
        - Routes
      parameters:
        - name: vehicleId
          in: query
          description: Filter results by vehicle id
          schema:
            type: string
            format: uuid
        - name: driverId
          in: query
          description: Filter results by driver id
          schema:
            type: string
            format: uuid
        - name: first
          in: query
          description: First result.
          schema:
            type: integer
        - name: max
          in: query
          description: Max results.
          schema:
            type: integer
      responses:
        "200":
          description: List of routes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Route"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createRoute
      summary: Create route
      description: Create new route
      tags:
        - Routes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Route"
        description: Payload
        required: true
      responses:
        "200":
          description: Created route
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Route"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /work-planning/v1/routes/{routeId}:
    get:
      operationId: findRoute
      summary: Find a route.
      description: Finds a route by id.
      tags:
        - Routes
      parameters:
        - name: routeId
          required: true
          in: path
          description: routes id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Found route
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Route"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateRoute
      summary: Updates routes
      description: Updates single route
      tags:
        - Routes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Route"
        description: Payload
        required: true
      parameters:
        - name: routeId
          required: true
          in: path
          description: route id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated route
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Route"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteRoute
      summary: Deletes route
      description: Deletes route
      tags:
        - Routes
      parameters:
        - name: routeId
          required: true
          in: path
          description: route id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating successful removal
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user-management/v1/drivers:
    get:
      operationId: listDrivers
      summary: List Drivers.
      description: Lists Drivers.
      tags:
        - Drivers
      parameters:
        - name: first
          in: query
          description: First result.
          schema:
            type: integer
        - name: max
          in: query
          description: Max results.
          schema:
            type: integer
      responses:
        "200":
          description: List of routes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Driver"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user-management/v1/drivers/{driverId}:
    get:
      operationId: findDriver
      summary: Find a driver.
      description: Finds a driver by id.
      tags:
        - Drivers
      parameters:
        - name: driverId
          required: true
          in: path
          description: driver's id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Found driver
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Driver"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /delivery-info/v1/sites:
    get:
      operationId: listSites
      summary: List Sites.
      description: Lists Sites.
      tags:
        - Sites
      parameters:
        - name: first
          in: query
          description: First result.
          schema:
            type: integer
        - name: max
          in: query
          description: Max results.
          schema:
            type: integer
      responses:
        "200":
          description: List of sites
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Site"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createSite
      summary: Create site
      description: Create new site
      tags:
        - Sites
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Site"
        description: Payload
        required: true
      responses:
        "200":
          description: Created site
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /delivery-info/v1/sites/{siteId}:
    get:
      operationId: findSite
      summary: Find a site.
      description: Finds a site by id.
      tags:
        - Sites
      parameters:
        - name: siteId
          required: true
          in: path
          description: site id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Found site
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateSite
      summary: Updates site
      description: Updates single site
      tags:
        - Sites
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Site"
        description: Payload
        required: true
      parameters:
        - name: siteId
          required: true
          in: path
          description: site id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated site
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /delivery-info/v1/freights:
    get:
      operationId: listFreights
      summary: List Freights.
      description: Lists Freights.
      tags:
        - Freights
      parameters:
        - name: first
          in: query
          description: First result.
          schema:
            type: integer
        - name: max
          in: query
          description: Max results.
          schema:
            type: integer
      responses:
        "200":
          description: List of freights
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Freight"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createFreight
      summary: Create freight
      description: Create new freight
      tags:
        - Freights
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Freight"
        description: Payload
        required: true
      responses:
        "200":
          description: Created freight
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Freight"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /delivery-info/v1/freights/{freightId}:
    get:
      operationId: findFreight
      summary: Find a freight.
      description: Finds a freight by id.
      tags:
        - Freights
      parameters:
        - name: freightId
          required: true
          in: path
          description: freight id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Found freight
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Freight"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateFreight
      summary: Updates freight
      description: Updates single freight
      tags:
        - Freights
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Freight"
        description: Payload
        required: true
      parameters:
        - name: freightId
          required: true
          in: path
          description: freight id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated freight
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Freight"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteFreight
      summary: Deletes freight
      description: Deletes freight
      tags:
        - Freights
      parameters:
        - name: freightId
          required: true
          in: path
          description: freight id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating successful removal
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /delivery-info/v1/freightUnits:
    get:
      operationId: listFreightUnits
      summary: List FreightUnits.
      description: Lists FreightUnits.
      tags:
        - FreightUnits
      parameters:
        - name: freightId
          in: query
          description: Freight id
          schema:
            type: string
            format: uuid
        - name: first
          in: query
          description: First result.
          schema:
            type: integer
        - name: max
          in: query
          description: Max results.
          schema:
            type: integer
      responses:
        "200":
          description: List of freight units
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FreightUnit"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createFreightUnit
      summary: Create freight unit
      description: Create new freight unit
      tags:
        - FreightUnits
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FreightUnit"
        description: Payload
        required: true
      responses:
        "200":
          description: Created freight unit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FreightUnit"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /delivery-info/v1/freightUnits/{freightUnitId}:
    get:
      operationId: findFreightUnit
      summary: Find a freight unit.
      description: Finds a freight unit by id.
      tags:
        - FreightUnits
      parameters:
        - name: freightUnitId
          required: true
          in: path
          description: freight unit id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Found freight unit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FreightUnit"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateFreightUnit
      summary: Updates freight unit
      description: Updates single freight unit
      tags:
        - FreightUnits
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FreightUnit"
        description: Payload
        required: true
      parameters:
        - name: freightUnitId
          required: true
          in: path
          description: freight unit id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated freight unit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FreightUnit"
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteFreightUnit
      summary: Deletes freight unit
      description: Deletes freight unit
      tags:
        - FreightUnits
      parameters:
        - name: freightUnitId
          required: true
          in: path
          description: freight unit id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating successful removal
        default:
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Error:
      type: object
      description: Error object
      required:
        - code
        - message
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
    Truck:
      type: object
      description: Represent single truck
      required:
        - plateNumber
        - type
        - vin
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        plateNumber:
          type: string
        type:
          type: string
          enum:
            - TRUCK
            - SEMI_TRUCK
        vin:
          type: string
          description: Truck identification number. This is unique for each truck and
            should be used as a hardware identifier for this specific truck
    Towable:
      type: object
      description: Represent single towable
      required:
        - plateNumber
        - type
        - vin
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        plateNumber:
          type: string
        type:
          type: string
          enum:
            - TRAILER
            - SEMI_TRAILER
            - DOLLY
        vin:
          type: string
          description: Towable identification number. This is unique for each towable and
            should be used as a hardware identifier for this specific towable
    Vehicle:
      type: object
      description: Represent single vehicle
      required:
        - truckId
        - towableIds
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        truckId:
          type: string
          description: Truck that towing the vehicle
          format: uuid
        towableIds:
          type: array
          description: >
            List of attached towables to vehicle. Order of towables should
            reflect the order of towables in the vehicle where first towable is
            the closest to the truck.
          items:
            type: string
            format: uuid
    Route:
      type: object
      description: Represent single planned route for single truck driver
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        vehicleId:
          type: string
          format: uuid
          description: Vehicle id
        driverId:
          type: string
          format: uuid
          description: Driver id
    Driver:
      type: object
      description: Represents single truck driver
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        displayName:
          type: string
          description: Driver display name
    Site:
      type: object
      description: Represents a single customer site
      required:
        - name
        - location
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Site name
        location:
          type: string
          format: wkt
          description: Site location as well-known text Point
    Freight:
      type: object
      description: Represents a single freight shipment, aka. waybill.
      required:
        - pointOfDeparture
        - destination
        - sender
        - recipient
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        sender:
          type: string
          description: Sender of the shipment
        recipient:
          type: string
          description: Receiver of the shipment
        payer:
          type: string
          description: Payer of the shipment
        pointOfDeparture:
          type: string
          description: Point of departure
        destination:
          type: string
          description: Point of arrival
        shipmentInfo:
          type: string
          description: Shipment info
        temperatureMin:
          type: number
          format: double
          description: Minimum temperature of the shipment
        temperatureMax:
          type: number
          format: double
          description: Maximum temperature of the shipment
        reservations:
          type: string
          description: Reservations for the shipment
    FreightUnit:
      type: object
      description: Represents a single freight unit in a freight shipment.
      required:
        - freightId
        - type
        - quantity
        - quantityUnit
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        freightId:
          type: string
          format: uuid
          description: Id of the freight shipment
        type:
          type: string
          description: Type of the unit
        quantity:
          type: string
          description: Quantity of the unit
        quantityUnit:
          type: string
          description: Quantity unit of the unit
        metadata:
          type: string
          description: Metadata of the unit
        reservations:
          type: string
          description: Reservations for the unit
