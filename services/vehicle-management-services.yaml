openapi: 3.0.3
info:
  version: 1.0.0
  title: VP-Kuljetus Vehicle Management Services

security:
  - bearerAuth: []

x-tyk-api-gateway:
  info:
    id: vehicle-management-service
    orgId: vp
    name: Vehicle Management Services
    state:
      active: true
  upstream:
    url: http://vehicle-management
  server:
    listenPath:
      value: /vehicle-management/
      strip: true

paths:
  /v1/system/ping:
    get:
      operationId: ping
      summary: Replies with pong
      description: Replies ping with pong
      tags:
        - System
        - SpecExternal
      responses:
        "200":
          description: Pong
          content:
            text/plain:
              schema:
                type: string

  /v1/trucks:
    get:
      operationId: listTrucks
      summary: List Trucks.
      description: Lists Trucks.
      tags:
        - Trucks
        - SpecApp
        - SpecManagementUI
        - SpecExternal
      parameters:
        - name: plateNumber
          in: query
          description: Filter results by plate number
          schema:
            type: string
        - name: first
          in: query
          description: First result.
          schema:
            type: integer
        - name: max
          in: query
          description: Max results.
          schema:
            type: integer
      responses:
        "200":
          description: List of trucks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Truck"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createTruck
      summary: Create truck
      description: Create new truck
      tags:
        - Trucks
        - SpecManagementUI
        - SpecExternal
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Truck"
        description: Payload
        required: true
      responses:
        "200":
          description: Created truck
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Truck"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/trucks/{truckId}":
    get:
      operationId: findTruck
      summary: Find a truck.
      description: Finds a truck by id.
      tags:
        - Trucks
        - SpecApp
        - SpecManagementUI
        - SpecExternal
      parameters:
        - name: truckId
          required: true
          in: path
          description: trucks id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Found truck
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Truck"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateTruck
      summary: Updates trucks
      description: Updates single truck
      tags:
        - Trucks
        - SpecManagementUI
        - SpecExternal
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Truck"
        description: Payload
        required: true
      parameters:
        - name: truckId
          required: true
          in: path
          description: truck id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated truck
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Truck"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteTruck
      summary: Deletes truck
      description: Deletes truck
      tags:
        - Trucks
        - SpecManagementUI
        - SpecExternal
      parameters:
        - name: truckId
          required: true
          in: path
          description: truck id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating successful removal
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/trailers:
    get:
      operationId: listTrailers
      summary: List Trailers.
      description: Lists Trailers.
      tags:
        - Trailers
        - SpecApp
        - SpecManagementUI
        - SpecExternal
      parameters:
        - name: plateNumber
          in: query
          description: Filter results by plate number
          schema:
            type: string
        - name: first
          in: query
          description: First result.
          schema:
            type: integer
        - name: max
          in: query
          description: Max results.
          schema:
            type: integer
      responses:
        "200":
          description: List of trailers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Trailer"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createTrailer
      summary: Create trailer
      description: Create new trailer
      tags:
        - Trailers
        - SpecManagementUI
        - SpecExternal
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Trailer"
        description: Payload
        required: true
      responses:
        "200":
          description: Created trailer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trailer"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/trailers/{trailerId}":
    get:
      operationId: findTrailer
      summary: Find a trailer.
      description: Finds a trailer by id.
      tags:
        - Trailers
        - SpecApp
        - SpecManagementUI
        - SpecExternal
      parameters:
        - name: trailerId
          required: true
          in: path
          description: trailers id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Found trailer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trailer"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateTrailer
      summary: Updates trailers
      description: Updates single trailer
      tags:
        - Trailers
        - SpecManagementUI
        - SpecExternal
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Trailer"
        description: Payload
        required: true
      parameters:
        - name: trailerId
          required: true
          in: path
          description: trailer id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated trailer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trailer"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteTrailer
      summary: Deletes trailer
      description: Deletes trailer
      tags:
        - Trailers
        - SpecManagementUI
        - SpecExternal
      parameters:
        - name: trailerId
          required: true
          in: path
          description: trailer id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating successful removal
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/vehicles:
    get:
      operationId: listVehicles
      summary: List Vehicles.
      description: Lists Vehicles.
      tags:
        - Vehicles
        - SpecApp
        - SpecManagementUI
        - SpecExternal
      parameters:
        - name: truckId
          in: query
          description: Filter results by truck id
          schema:
            type: string
            format: uuid
        - name: first
          in: query
          description: First result.
          schema:
            type: integer
        - name: max
          in: query
          description: Max results.
          schema:
            type: integer
      responses:
        "200":
          description: List of vehicles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Vehicle"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createVehicle
      summary: Create vehicle
      description: Create new vehicle
      tags:
        - Vehicles
        - SpecManagementUI
        - SpecExternal
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Vehicle"
        description: Payload
        required: true
      responses:
        "200":
          description: Created vehicle
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vehicle"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/vehicles/{vehicleId}":
    get:
      operationId: findVehicle
      summary: Find a vehicle.
      description: Finds a vehicle by id.
      tags:
        - Vehicles
        - SpecApp
        - SpecManagementUI
        - SpecExternal
      parameters:
        - name: vehicleId
          required: true
          in: path
          description: vehicles id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Found vehicle
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vehicle"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateVehicle
      summary: Updates vehicles
      description: Updates single vehicle
      tags:
        - Vehicles
        - SpecManagementUI
        - SpecExternal
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Vehicle"
        description: Payload
        required: true
      parameters:
        - name: vehicleId
          required: true
          in: path
          description: vehicle id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated vehicle
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vehicle"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteVehicle
      summary: Deletes vehicle
      description: Deletes vehicle
      tags:
        - Vehicles
        - SpecManagementUI
        - SpecExternal
      parameters:
        - name: vehicleId
          required: true
          in: path
          description: vehicle id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating successful removal
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      description: Error object
      required:
        - code
        - message
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string

    Truck:
      type: object
      description: Represent single truck
      required:
        - plateNumber
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        plateNumber:
          type: string
          
    Trailer:
      type: object
      description: Represent single trailer
      required:
        - plateNumber
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        plateNumber:
          type: string
          
    Vehicle:
      type: object
      description: Represent single vehicle
      required:
        - truckId
        - trailerIds
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        truckId:
          type: string
          description: Truck that towing the vehicle
          format: uuid
        trailerIds:
          type: array
          description: |
            List of attached trailers to vehicle. Order of trailers should reflect the order of trailers in the vehicle where first trailer is the closest to the truck. 
          minItems: 0
          maxItems: 2
          items:
            type: string
            format: uuid