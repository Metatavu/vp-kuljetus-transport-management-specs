openapi: 3.0.3
info:
  version: 1.0.0
  title: VP-Kuljetus Vehicle Management Services

security:
  - bearerAuth: []

x-tyk-api-gateway:
  info:
    id: vehicle-management-service
    orgId: vp
    name: Vehicle Management Services
    state:
      active: true
  upstream:
    url: http://vehicle-management
  server:
    listenPath:
      value: /vehicle-management/
      strip: true

paths:
  /v1/system/ping:
    get:
      operationId: ping
      summary: Replies with pong
      description: Replies ping with pong
      tags:
        - System
        - SpecExternal
      responses:
        "200":
          description: Pong
          content:
            text/plain:
              schema:
                type: string

  /v1/trucks:
    get:
      operationId: listTrucks
      summary: List Trucks.
      description: Lists Trucks.
      tags:
        - Trucks
        - SpecApp
        - SpecManagementUI
        - SpecExternal
      parameters:
        - name: plateNumber
          in: query
          description: Filter results by plate number
          schema:
            type: string
        - name: first
          in: query
          description: First result.
          schema:
            type: integer
        - name: max
          in: query
          description: Max results.
          schema:
            type: integer
      responses:
        "200":
          description: List of trucks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Truck"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createTruck
      summary: Create truck
      description: Create new truck
      tags:
        - Trucks
        - SpecManagementUI
        - SpecExternal
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Truck"
        description: Payload
        required: true
      responses:
        "200":
          description: Created truck
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Truck"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/trucks/{truckId}":
    get:
      operationId: findTruck
      summary: Find a truck.
      description: Finds a truck by id.
      tags:
        - Trucks
        - SpecApp
        - SpecManagementUI
        - SpecExternal
      parameters:
        - name: truckId
          required: true
          in: path
          description: trucks id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Found truck
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Truck"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateTruck
      summary: Updates trucks
      description: Updates single truck
      tags:
        - Trucks
        - SpecManagementUI
        - SpecExternal
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Truck"
        description: Payload
        required: true
      parameters:
        - name: truckId
          required: true
          in: path
          description: truck id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated truck
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Truck"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteTruck
      summary: Deletes truck
      description: Deletes truck
      tags:
        - Trucks
        - SpecManagementUI
        - SpecExternal
      parameters:
        - name: truckId
          required: true
          in: path
          description: truck id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating successful removal
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      description: Error object
      required:
        - code
        - message
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string

    Truck:
      type: object
      description: Represent single truck
      required:
        - plateNumber
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        plateNumber:
          type: string
        name: 
          type: string