openapi: 3.0.3
info:
  version: 1.0.0
  title: VP-Kuljetus Delivery Info Services

security:
  - BearerAuth: [driver, manager]

x-tyk-api-gateway:
  info:
    id: delivery-info-services
    orgId: vp
    name: Delivery Info Services
    state:
      active: true
  upstream:
    url: http://delivery-info
  server:
    listenPath:
      value: /delivery-info/
      strip: true

paths:
  /v1/system/ping:
    get:
      operationId: ping
      summary: Replies with pong
      description: Replies ping with pong
      security: []
      tags:
        - System
      responses:
        "200":
          description: Pong
          content:
            text/plain:
              schema:
                type: string

  /v1/sites:
    get:
      operationId: listSites
      summary: List Sites.
      description: Lists Sites.
      security:
        - BearerAuth: [driver, manager]
      tags:
        - Sites
        - SpecManagementUI
        - SpecApp
      parameters:
        - name: archived
          in: query
          description: Filter sites by archived status
          schema:
            type: boolean
        - name: first
          in: query
          description: First result.
          schema:
            type: integer
        - name: max
          in: query
          description: Max results.
          schema:
            type: integer
      responses:
        "200":
          description: List of sites
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Site"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createSite
      summary: Create site
      description: Create new site
      security:
        - BearerAuth: [manager]
      tags:
        - Sites
        - SpecManagementUI
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Site"
        description: Payload
        required: true
      responses:
        "200":
          description: Created site
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/sites/{siteId}":
    get:
      operationId: findSite
      summary: Find a site.
      description: Finds a site by id.
      security:
        - BearerAuth: [driver, manager]
      tags:
        - Sites
        - SpecApp
        - SpecManagementUI
      parameters:
        - name: siteId
          required: true
          in: path
          description: site id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Found site
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateSite
      summary: Updates site
      description: Updates single site
      security:
        - BearerAuth: [manager]
      tags:
        - Sites
        - SpecManagementUI
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Site"
        description: Payload
        required: true
      parameters:
        - name: siteId
          required: true
          in: path
          description: site id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated site
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteSite
      summary: Deletes site
      description: Deletes site. For non-production use. Returns forbidden in production environment.
      security:
        - BearerAuth: [manager]
      tags:
        - Sites
      parameters:
        - name: siteId
          required: true
          in: path
          description: site id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating successful removal
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/tasks:
    get:
      operationId: listTasks
      summary: List Tasks.
      description: Lists Tasks.
      security:
        - BearerAuth: [driver, manager]
      tags:
        - Tasks
        - SpecManagementUI
        - SpecApp
      parameters:
        - name: routeId
          in: query
          description: Route id
          schema:
            type: string
            format: uuid
        - name: assignedToRoute
          in: query
          description: Has been assigned to a route. Should not be used together with routeId.
          schema:
            type: boolean
        - name: freightId
          in: query
          description: Freight id
          schema:
            type: string
            format: uuid
        - name: customerSiteId
          in: query
          description: Customer site id
          schema:
            type: string
            format: uuid
        - name: type
          in: query
          description: Task type
          schema:
            $ref: "#/components/schemas/TaskType"
        - name: first
          in: query
          description: First result.
          schema:
            type: integer
        - name: max
          in: query
          description: Max results.
          schema:
            type: integer
      responses:
        "200":
          description: List of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createTask
      summary: Create task
      description: Create new task
      security:
        - BearerAuth: [manager]
      tags:
        - Tasks
        - SpecManagementUI
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
        description: Payload
        required: true
      responses:
        "200":
          description: Created task
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/tasks/{taskId}":
    get:
      operationId: findTask
      summary: Find a task.
      description: Finds a task by id.
      security:
        - BearerAuth: [driver, manager]
      tags:
        - Tasks
        - SpecApp
        - SpecManagementUI
      parameters:
        - name: taskId
          required: true
          in: path
          description: task id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Found task
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateTask
      summary: Updates task
      description: Updates single task
      security:
        - BearerAuth: [driver, manager]
      tags:
        - Tasks
        - SpecApp
        - SpecManagementUI
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
        description: Payload
        required: true
      parameters:
        - name: taskId
          required: true
          in: path
          description: task id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated task
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteTask
      summary: Deletes task
      description: Deletes task
      security:
        - BearerAuth: [manager]
      tags:
        - Tasks
        - SpecManagementUI
      parameters:
        - name: taskId
          required: true
          in: path
          description: task id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating successful removal
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/freights:
    get:
      operationId: listFreights
      summary: List Freights.
      description: Lists Freights.
      security:
        - BearerAuth: [driver, manager]
      tags:
        - Freights
        - SpecManagementUI
        - SpecApp
      parameters:
        - name: first
          in: query
          description: First result.
          schema:
            type: integer
        - name: max
          in: query
          description: Max results.
          schema:
            type: integer
      responses:
        "200":
          description: List of freights
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Freight"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createFreight
      summary: Create freight
      description: Create new freight
      security:
        - BearerAuth: [manager]
      tags:
        - Freights
        - SpecManagementUI
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Freight"
        description: Payload
        required: true
      responses:
        "200":
          description: Created freight
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Freight"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/freights/{freightId}":
    get:
      operationId: findFreight
      summary: Find a freight.
      description: Finds a freight by id.
      security:
        - BearerAuth: [driver, manager]
      tags:
        - Freights
        - SpecApp
        - SpecManagementUI
      parameters:
        - name: freightId
          required: true
          in: path
          description: freight id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Found freight
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Freight"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateFreight
      summary: Updates freight
      description: Updates single freight
      security:
        - BearerAuth: [manager]
      tags:
        - Freights
        - SpecManagementUI
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Freight"
        description: Payload
        required: true
      parameters:
        - name: freightId
          required: true
          in: path
          description: freight id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated freight
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Freight"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteFreight
      summary: Deletes freight
      description: Deletes freight
      security:
        - BearerAuth: [manager]
      tags:
        - Freights
        - SpecManagementUI
      parameters:
        - name: freightId
          required: true
          in: path
          description: freight id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating successful removal
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/freightUnits:
    get:
      operationId: listFreightUnits
      summary: List FreightUnits.
      description: Lists FreightUnits.
      security:
        - BearerAuth: [driver, manager]
      tags:
        - FreightUnits
        - SpecManagementUI
        - SpecApp
      parameters:
        - name: freightId
          in: query
          description: Freight id
          schema:
            type: string
            format: uuid
        - name: first
          in: query
          description: First result.
          schema:
            type: integer
        - name: max
          in: query
          description: Max results.
          schema:
            type: integer
      responses:
        "200":
          description: List of freight units
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FreightUnit"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createFreightUnit
      summary: Create freight unit
      description: Create new freight unit
      security:
        - BearerAuth: [driver, manager]
      tags:
        - FreightUnits
        - SpecManagementUI
        - SpecApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FreightUnit"
        description: Payload
        required: true
      responses:
        "200":
          description: Created freight unit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FreightUnit"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/freightUnits/{freightUnitId}":
    get:
      operationId: findFreightUnit
      summary: Find a freight unit.
      description: Finds a freight unit by id.
      security:
        - BearerAuth: [driver, manager]
      tags:
        - FreightUnits
        - SpecApp
        - SpecManagementUI
      parameters:
        - name: freightUnitId
          required: true
          in: path
          description: freight unit id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Found freight unit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FreightUnit"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateFreightUnit
      summary: Updates freight unit
      description: Updates single freight unit
      security:
        - BearerAuth: [driver, manager]
      tags:
        - FreightUnits
        - SpecManagementUI
        - SpecApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FreightUnit"
        description: Payload
        required: true
      parameters:
        - name: freightUnitId
          required: true
          in: path
          description: freight unit id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated freight unit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FreightUnit"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteFreightUnit
      summary: Deletes freight unit
      description: Deletes freight unit
      security:
        - BearerAuth: [manager]
      tags:
        - FreightUnits
        - SpecManagementUI
      parameters:
        - name: freightUnitId
          required: true
          in: path
          description: freight unit id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating successful removal
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      description: Error object
      required:
        - code
        - message
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
        creatorId:
          type: string
          readOnly: true
          format: uuid
        createdAt:
          format: date-time
          type: string
          readOnly: true
        lastModifierId:
          type: string
          readOnly: true
          format: uuid
        modifiedAt:
          format: date-time
          type: string
          readOnly: true

    Site:
      type: object
      description: Represents a single customer site
      required:
        - name
        - location
        - address
        - postalCode
        - locality
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Site name
        location:
          type: string
          format: wkt
          description: Site location as well-known text Point
        address:
          type: string
          description: Address of the site
        postalCode:
          type: string
          description: Postal code of the site
        locality:
          type: string
          description: Locality of the site
        additionalInfo:
          type: string
          description: >
            additional information about the site, e.g. delivery instructions.
            This is shown in the task for the driver.
        creatorId:
          type: string
          readOnly: true
          format: uuid
        createdAt:
          format: date-time
          type: string
          readOnly: true
        lastModifierId:
          type: string
          readOnly: true
          format: uuid
        modifiedAt:
          format: date-time
          type: string
          readOnly: true
        archivedAt:
          type: string
          format: date-time
          description: >
            Setting the archivedAt time marks the site as archived.
            Sites marked as archived will not appear in list requests unless archived filter is set to true.
            Archived site cannot be updated, unless archivedAt is first set to null.

    Task:
      type: object
      description: Represent single task for freight
      required:
        - freightId
        - customerSiteId
        - type
        - groupNumber
        - status
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        freightId:
          type: string
          format: uuid
          description: Freight id
        customerSiteId:
          type: string
          format: uuid
          description: Customer site id
        type:
          $ref: "#/components/schemas/TaskType"
        groupNumber:
          type: integer
          description: >
            Group number of the task. Gets a value of 0 by default. Can be updated from the management UI.
            All tasks with the same freightId, customerSiteId, type and group number are shown as grouped
            together in the driver app.
        orderNumber:
          type: integer
          description: >
            Order number of the task. Tasks have order numbers when being part of a route (having a routeId).
            Unallocated tasks (not having a routeId) do not have order numbers. When either routeId or orderNumber
            is updated to a task, order numbers of other tasks with the same routeId are also updated accordingly.
            This means all of the tasks in a route should be reloaded when order number of a single task is updated.
            When updating a task to have an order number that already exists in the same route, the existing task
            is placed after the updated task.

            Tasks are also displayed as grouped, when they have the same routeId, customerSiteId, type and groupNumber.
            Order of tasks inside a group does not matter, so a new task added to the group will be the last task
            in the group. When order is updated, the grouping should be taken into account in order numbers. All
            of the grouped tasks should be next to each other. A task after the grouped tasks should have the next
            order number from the highest one of the group.
        status:
          $ref: "#/components/schemas/TaskStatus"
        remarks:
          type: string
          description: Task remarks
        routeId:
          type: string
          format: uuid
          description: Route id
        startedAt:
          type: string
          format: date-time
          readOnly: true
          description: >
            Time the task was started at. Filled when task status is changed from TODO to IN_PROGRESS.
        finishedAt:
          type: string
          format: date-time
          readOnly: true
          description: >
            Time the task was finished at. Filled when task status is changed from IN_PROGRESS to DONE.
        creatorId:
          type: string
          readOnly: true
          format: uuid
        createdAt:
          format: date-time
          type: string
          readOnly: true
        lastModifierId:
          type: string
          readOnly: true
          format: uuid
        modifiedAt:
          format: date-time
          type: string
          readOnly: true

    TaskType:
      type: string
      description: Type of the task
      enum:
        - UNLOAD
        - LOAD

    TaskStatus:
      type: string
      description: Status of the task
      enum:
        - TODO
        - IN_PROGRESS
        - DONE

    Freight:
      type: object
      description: Represents a single freight shipment, aka. waybill.
      required:
        - senderSiteId
        - recipientSiteId
        - pointOfDepartureSiteId
        - destinationSiteId
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        freightNumber:
          type: integer
          readOnly: true
          description: Freight number. Unique and auto-incremented.
        senderSiteId:
          type: string
          format: uuid
          description: Shipment sender site
        recipientSiteId:
          type: string
          format: uuid
          description: Shipment receiver site
        pointOfDepartureSiteId:
          type: string
          format: uuid
          description: Point of departure site
        destinationSiteId:
          type: string
          format: uuid
          description: Point of arrival site
        creatorId:
          type: string
          readOnly: true
          format: uuid
        createdAt:
          format: date-time
          type: string
          readOnly: true
        lastModifierId:
          type: string
          readOnly: true
          format: uuid
        modifiedAt:
          format: date-time
          type: string
          readOnly: true

    FreightUnit:
      type: object
      description: Represents a single freight unit in a freight shipment.
      required:
        - freightId
        - type
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        freightId:
          type: string
          format: uuid
          description: Id of the freight shipment
        type:
          type: string
          description: Type of the unit
        quantity:
          type: number
          format: double
          description: Quantity of the unit, can be a decimal number
        contents:
          type: string
          description: Description of contents of the unit
        reservations:
          type: string
          description: Reservations for the unit
        creatorId:
          type: string
          readOnly: true
          format: uuid
        createdAt:
          format: date-time
          type: string
          readOnly: true
        lastModifierId:
          type: string
          readOnly: true
          format: uuid
        modifiedAt:
          format: date-time
          type: string
          readOnly: true