openapi: 3.0.3
info:
  version: 1.0.0
  title: VP-Kuljetus Delivery Info Services

security:
  - BearerAuth: [driver, manager]

x-tyk-api-gateway:
  info:
    id: delivery-info-services
    orgId: vp
    name: Delivery Info Services
    state:
      active: true
  upstream:
    url: http://delivery-info
  server:
    listenPath:
      value: /delivery-info/
      strip: true

paths:
  /v1/system/ping:
    get:
      operationId: ping
      summary: Replies with pong
      description: Replies ping with pong
      security: []
      tags:
        - System
      responses:
        "200":
          description: Pong
          content:
            text/plain:
              schema:
                type: string

  /v1/sites:
    get:
      operationId: listSites
      summary: List Sites.
      description: Lists Sites.
      security:
        - BearerAuth: [driver, manager]
      tags:
        - Sites
        - SpecManagementUI
        - SpecApp
      parameters:
        - name: first
          in: query
          description: First result.
          schema:
            type: integer
        - name: max
          in: query
          description: Max results.
          schema:
            type: integer
      responses:
        "200":
          description: List of sites
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Site"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createSite
      summary: Create site
      description: Create new site
      security:
        - BearerAuth: [manager]
      tags:
        - Sites
        - SpecManagementUI
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Site"
        description: Payload
        required: true
      responses:
        "200":
          description: Created site
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/sites/{siteId}":
    get:
      operationId: findSite
      summary: Find a site.
      description: Finds a site by id.
      security:
        - BearerAuth: [driver, manager]
      tags:
        - Sites
        - SpecApp
        - SpecManagementUI
      parameters:
        - name: siteId
          required: true
          in: path
          description: site id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Found site
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateSite
      summary: Updates site
      description: Updates single site
      security:
        - BearerAuth: [manager]
      tags:
        - Sites
        - SpecManagementUI
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Site"
        description: Payload
        required: true
      parameters:
        - name: siteId
          required: true
          in: path
          description: site id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated site
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteSite
      summary: Deletes site
      description: Deletes site
      security:
        - BearerAuth: [ manager ]
      tags:
        - Sites
        - SpecManagementUI
      parameters:
        - name: siteId
          required: true
          in: path
          description: site id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating successful removal
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteSite
      summary: Deletes site
      description: Deletes site
      tags:
        - Sites
        - SpecManagementUI
      parameters:
        - name: siteId
          required: true
          in: path
          description: site id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating successful removal
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/freights:
    get:
      operationId: listFreights
      summary: List Freights.
      description: Lists Freights.
      security:
        - BearerAuth: [driver, manager]
      tags:
        - Freights
        - SpecManagementUI
        - SpecApp
      parameters:
        - name: first
          in: query
          description: First result.
          schema:
            type: integer
        - name: max
          in: query
          description: Max results.
          schema:
            type: integer
      responses:
        "200":
          description: List of freights
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Freight"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createFreight
      summary: Create freight
      description: Create new freight
      security:
        - BearerAuth: [manager]
      tags:
        - Freights
        - SpecManagementUI
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Freight"
        description: Payload
        required: true
      responses:
        "200":
          description: Created freight
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Freight"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/freights/{freightId}":
    get:
      operationId: findFreight
      summary: Find a freight.
      description: Finds a freight by id.
      security:
        - BearerAuth: [driver, manager]
      tags:
        - Freights
        - SpecApp
        - SpecManagementUI
      parameters:
        - name: freightId
          required: true
          in: path
          description: freight id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Found freight
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Freight"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateFreight
      summary: Updates freight
      description: Updates single freight
      security:
        - BearerAuth: [manager]
      tags:
        - Freights
        - SpecManagementUI
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Freight"
        description: Payload
        required: true
      parameters:
        - name: freightId
          required: true
          in: path
          description: freight id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated freight
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Freight"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteFreight
      summary: Deletes freight
      description: Deletes freight
      security:
        - BearerAuth: [manager]
      tags:
        - Freights
        - SpecManagementUI
      parameters:
        - name: freightId
          required: true
          in: path
          description: freight id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating successful removal
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/freightUnits:
    get:
      operationId: listFreightUnits
      summary: List FreightUnits.
      description: Lists FreightUnits.
      security:
        - BearerAuth: [driver, manager]
      tags:
        - FreightUnits
        - SpecManagementUI
        - SpecApp
      parameters:
        - name: freightId
          in: query
          description: Freight id
          schema:
            type: string
            format: uuid
        - name: first
          in: query
          description: First result.
          schema:
            type: integer
        - name: max
          in: query
          description: Max results.
          schema:
            type: integer
      responses:
        "200":
          description: List of freight units
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FreightUnit"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createFreightUnit
      summary: Create freight unit
      description: Create new freight unit
      security:
        - BearerAuth: [driver, manager]
      tags:
        - FreightUnits
        - SpecManagementUI
        - SpecApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FreightUnit"
        description: Payload
        required: true
      responses:
        "200":
          description: Created freight unit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FreightUnit"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/freightUnits/{freightUnitId}":
    get:
      operationId: findFreightUnit
      summary: Find a freight unit.
      description: Finds a freight unit by id.
      security:
        - BearerAuth: [driver, manager]
      tags:
        - FreightUnits
        - SpecApp
        - SpecManagementUI
      parameters:
        - name: freightUnitId
          required: true
          in: path
          description: freight unit id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Found freight unit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FreightUnit"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateFreightUnit
      summary: Updates freight unit
      description: Updates single freight unit
      security:
        - BearerAuth: [driver, manager]
      tags:
        - FreightUnits
        - SpecManagementUI
        - SpecApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FreightUnit"
        description: Payload
        required: true
      parameters:
        - name: freightUnitId
          required: true
          in: path
          description: freight unit id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated freight unit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FreightUnit"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteFreightUnit
      summary: Deletes freight unit
      description: Deletes freight unit
      security:
        - BearerAuth: [manager]
      tags:
        - FreightUnits
        - SpecManagementUI
      parameters:
        - name: freightUnitId
          required: true
          in: path
          description: freight unit id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating successful removal
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      description: Error object
      required:
        - code
        - message
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
        creatorId:
          type: string
          readOnly: true
          format: uuid
        createdAt:
          format: date-time
          type: string
          readOnly: true
        lastModifierId:
          type: string
          readOnly: true
          format: uuid
        modifiedAt:
          format: date-time
          type: string
          readOnly: true

    Site:
      type: object
      description: Represents a single customer site
      required:
        - name
        - location
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Site name
        location:
          type: string
          format: wkt
          description: Site location as well-known text Point
        creatorId:
          type: string
          readOnly: true
          format: uuid
        createdAt:
          format: date-time
          type: string
          readOnly: true
        lastModifierId:
          type: string
          readOnly: true
          format: uuid
        modifiedAt:
          format: date-time
          type: string
          readOnly: true

    Freight:
      type: object
      description: Represents a single freight shipment, aka. waybill.
      required:
        - pointOfDeparture
        - destination
        - sender
        - recipient
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        sender:
          type: string
          description: Sender of the shipment
        recipient:
          type: string
          description: Receiver of the shipment
        payer:
          type: string
          description: Payer of the shipment
        pointOfDeparture:
          type: string
          description: Point of departure
        destination:
          type: string
          description: Point of arrival
        shipmentInfo:
          type: string
          description: Shipment info
        temperatureMin:
          type: number
          format: double
          description: Minimum temperature of the shipment
        temperatureMax:
          type: number
          format: double
          description: Maximum temperature of the shipment
        reservations:
          type: string
          description: Reservations for the shipment
        creatorId:
          type: string
          readOnly: true
          format: uuid
        createdAt:
          format: date-time
          type: string
          readOnly: true
        lastModifierId:
          type: string
          readOnly: true
          format: uuid
        modifiedAt:
          format: date-time
          type: string
          readOnly: true

    FreightUnit:
      type: object
      description: Represents a single freight unit in a freight shipment.
      required:
        - freightId
        - type
        - quantity
        - quantityUnit
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        freightId:
          type: string
          format: uuid
          description: Id of the freight shipment
        type:
          type: string
          description: Type of the unit
        quantity:
          type: string
          description: Quantity of the unit
        quantityUnit:
          type: string
          description: Quantity unit of the unit
        reservations:
          type: string
          description: Reservations for the unit
        creatorId:
          type: string
          readOnly: true
          format: uuid
        createdAt:
          format: date-time
          type: string
          readOnly: true
        lastModifierId:
          type: string
          readOnly: true
          format: uuid
        modifiedAt:
          format: date-time
          type: string
          readOnly: true